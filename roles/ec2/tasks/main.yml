---
# tasks file for ec2
- name: Installing boto & boto3 on local system
  pip:
    name: "{{ item }}"
    state: present
  loop: "{{ python_pkgs }}"

- name: Creating Security Group for K8s Cluster
  ec2_group:
    name: "{{ sg_name }}"
    description: Security Group for allowing all port
    region: "{{ region_name }}"
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    rules:
    - proto: all
      cidr_ip: 0.0.0.0/0
    rules_egress:
    - proto: all
      cidr_ip: 0.0.0.0/0

- name: Launching three EC2 instances on AWS
  ec2:
    key_name: "{{ keypair }}"
    instance_type: "{{ instance_flavour }}"
    image: "{{ ami_id }}"
    wait: true
    group: "{{ sg_name }}"
    count: 1
    vpc_subnet_id: "{{ subnet_name }}"
    assign_public_ip: yes
    region: "{{ region_name }}"
    state: present
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    instance_tags:
      Name: "{{ item }}"
  register: ec2
  loop: "{{ instance_tag }}"

- set_fact:
    ip: "{{ ip + item['instances']}}"
  with_items:
    - "{{ ec2.results }}"

- debug:
    msg: "{{item.public_ip}}"
  with_items:
    - "{{ ip }}"

- name: dynamically add instancecs to the group ec2_master into the in-memory inventory
  add_host:
    hostname: "{{ item.public_ip }}"
    groupname: ec2_master
  loop: "{{ ip }}"
  when: 'item.public_ip|string in ec2.results[0].instances[0].public_ip|string'

- name: dynamically add instancecs to the group ec2_slave into the in-memory inventory
  add_host:
    hostname: "{{ item.public_ip }}"
    groupname: ec2_slave
  loop: "{{ ip }}"
  when: 'item.public_ip|string not in ec2.results[0].instances[0].public_ip|string'

- name: wait for new instances to come up
  wait_for:
    host: "{{ item.public_dns_name}}"
    port: 22
    state: started
  loop: "{{ ip }}"
